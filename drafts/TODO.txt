
Last updated: 5/19/2017 <mvpratt>

Questions for B9lab:
  Add support for many users  (do we need some sort of login?)

0xea738e1eb1e9c780f0b4d60a5a8925a40f8793f3
0xda95511fe1ff57e3a145b239493660397cc40403
0xb8ab592e243a3a1e2a45d7dbd454c6bad13e2b98
0x6874f98437f7736397a4b2691a203e621a6be518
0x7bfe244946bd86947deacbc79082ee47312973c4
0x0d63be325fef0a67be4d3aa1134595fa970052bd
0x583797f2c711624d03f9a93b4dfb9f3ef2182db9

Issue:
Bug - truffle not migrating every time?


Features:
Create new test cases in which additional projects are deployed from FundingHub
In web GUI, be sure to get the index of the most recent deployed project

  Web UI - Multiple projects
  Web UI - Multiple contributers, Show contributed balances from each contributer
  Use a struct to store info in Project
  Add deadline support
  Test broken - deadline.js
  get list of all projects
  Improve display of balance (units of ETH?)
  Reset contract

How to track a bunch of projects:
  And array (address -> index), store array size, project name?
  A mapping (address -> owner)

Testing:
  Run with geth local blockchain



===============================================

Low priority:
Comment out debug functions
  If contribution puts over the top, extra funds returned to contributer

  Error checking/security  - i.e. weird / malformed /invalid inputs
    Requesting funds when balance is 0
    Users cant get refund out of a funded project
    Does contract need some overhead funds?  make sure doesnt run out of money
    Change to withdrawl model
    Owner cant fund own contract!

  Refactoring:
    Can choose order of tests?
    Storage considerations
    tests - use truffle "require" to get the contract ABI once at beginning

  Add basic error messages (for debug)
    When sending funds fails
    When transaction fails for another reason

  Automated tests:
    Test - Owner requests payout, not admin  (issue, owners balance decreases because of the request costs gas)
    Test - Check that requester received funds, more precisely (minus gas cost)
    Test - Cleanup debug / admin function calls

=============================================


DONE:
    Create README.md
    Web UI - Create a new project from the Web Interface
    Web UI - Request Refund
    Web UI - Request Payout
    Web UI - Refresh automatically
    Allow multiple contributions from same person
    FundingHub can deploy a contract
    Add web interface - Project - show balance, state, and button to add funds
    Add events - basic
    Add modifiers - basic
    Users can get refunds from underfunded project that reached deadline
    If deadline expired, funds returned to contributer
    If deadline expired, payout disabled.
    If project is already fully funded, funds returned to contributer
    Run more than one test in same directory 
    Add access restrictions
    More than one contributer can add funds and request refund
    Payout enabled only when funding goal reached
    Record contributer address when funds received
    Payout to owner - called manually
    Allow contributer to request refund
    Create a project that allows a contributer to add money.
