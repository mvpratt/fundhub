
AUTHOR: <mvpratt>

9/6/17
Project size: 1612 bytes
Transaction cost: 481282 gas. 
Execution cost: 324426 gas.

FundingHub size: 2995 bytes
Transaction cost: 841337 gas. 
Execution cost: 597029 gas.


IN PROGRESS:

Truffle migration script that creates a project after FundingHub deployed


TODO: 

From "miscellaneous printout -- choose size of struct elements"

  Incorporate Timothy GUI upgrades

  Make sure using withdrawl pattern

  Error checking/security  - i.e. malformed / invalid inputs
    Requesting refund or payout when balance is 0
   
  Design patterns: use require()
  Test revert()  -- Note: reverts will cause tests to fail  (maybe need to catch the errors??)
  


BACKLOG:

  Verify amounts of payouts, refunds, contributions, etc (minus gas cost) 

  Remove getProjectAddress() function

  Check account balances for required funds at the beginning of each test
  Cleanup javascript console logging
  Loads really slow in Safari, console won't open
  Show owner in project table

  Debug - Reset FundingHub/Projects
    Show events

  Add basic error messages (for debug)
    When sending funds fails
    When transaction fails for another reason

  Split tests - Project.js, FundHub.js


=============================================

DONE:
  contribute() should use project address, not index
  Dont save duration in the contract
  modularize project creation
  Use modifiers
  Remove states
  Test payout - succeess
  Bug - sometimes tests fail - especially the deadline test  (added returns for every promise.  FIXED)
  Get rid of getAmountRaised()
  Update to truffle 3.4.x


DONE:
    Update Readme
    Move broken tests to drafts (not in repo)
    Write automated test for refund()
    Tested - Refunds not allowed unless deadline is reached and project isn't fully funded.
    Test payouts to multiple owners (user specified)
    Test refunds from multiple contributers
    Add constant functions
    Multiple contributers (max 3)
    Web UI - Multiple contributers, Show contributed balances from each contributer
    Select projec to fund
    Added support for 3 projects
    Improve display of balance (units of ETH)
    Use a struct to store info in Project
    Basic testing with geth local chain
    Add deadline to project
    Moved key project data to a struct
    Web UI - create new project from fundhub 
    Fund project from FundingHub (flow through)
    Create README.md
    Web UI - Create a new project from the Web Interface
    Web UI - Request Refund
    Web UI - Request Payout
    Web UI - Refresh automatically
    Allow multiple contributions from same person
    FundingHub can deploy a contract
    Add web interface - Project - show balance, state, and button to add funds
    Add events - basic
    Add modifiers - basic
    Users can get refunds from underfunded project that reached deadline
    If deadline expired, funds returned to contributer
    If deadline expired, payout disabled.
    If project is already fully funded, funds returned to contributer
    Run more than one test in same directory 
    Add access restrictions
    More than one contributer can add funds and request refund
    Payout enabled only when funding goal reached
    Record contributer address when funds received
    Payout to owner - called manually
    Allow contributer to request refund
    Create a project that allows a contributer to add money.

===============================================



